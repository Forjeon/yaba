// Generated by diesel_ext

#![allow(unused)]
#![allow(clippy::all)]


use crate::schema::*;

use diesel::prelude::*;
use diesel::sql_types::*;

use serde::Serialize;

use bigdecimal::BigDecimal;
use time::Date;


// Core structs

#[derive(Debug, Queryable, Selectable, Serialize)]
#[diesel(primary_key(TransactionID))]
#[diesel(table_name = crate::schema::Transaction)]
#[diesel(check_for_backend(diesel::mysql::Mysql))]
pub struct Trans {
    pub TransactionID: u32,
    pub TransactionDate: Date,
    pub Description: String,
    pub Amount: BigDecimal,
}

#[derive(Debug, Queryable, Selectable, Serialize)]
#[diesel(primary_key(CategoryID))]
#[diesel(table_name = crate::schema::TransactionCategory)]
#[diesel(check_for_backend(diesel::mysql::Mysql))]
pub struct TransCat {
    pub CategoryID: u8,
    pub CategoryName: String,
    pub CategoryType: CategoryTypeEnum,
}

#[derive(Debug, Queryable, Selectable, Serialize)]
#[diesel(primary_key(JobID))]
#[diesel(table_name = crate::schema::Job)]
#[diesel(check_for_backend(diesel::mysql::Mysql))]
pub struct JobStruct {
    pub JobID: u8,
    pub JobName: String,
    pub Wage: BigDecimal,
    pub ExpectedMonthlyHours: u8,
    pub ExpectedMonthlyMissHours: u8,
}

#[derive(Debug, Queryable, Selectable, Serialize)]
#[diesel(primary_key(AccountID))]
#[diesel(table_name = crate::schema::PaymentAccount)]
#[diesel(check_for_backend(diesel::mysql::Mysql))]
pub struct PayAcc {
    pub AccountID: u8,
    pub AccountName: String,
    pub AccountType: AccountTypeEnum,
}

// Category interface structs

#[derive(Debug, Queryable, Selectable, Serialize)]
#[diesel(primary_key(TransactionID))]
#[diesel(table_name = crate::schema::TransactionInstanceCategory)]
#[diesel(check_for_backend(diesel::mysql::Mysql))]
pub struct TransInstCat {
    pub TransactionID: u32,
    pub CategoryID: u8,
}

#[derive(Debug, Queryable, Selectable, Serialize)]
#[diesel(primary_key(CategoryID))]
#[diesel(table_name = crate::schema::IncomeCategory)]
#[diesel(check_for_backend(diesel::mysql::Mysql))]
pub struct IncCat {
    pub CategoryID: u8,
    pub MonthlyExpected: BigDecimal,
}

#[derive(Debug, Queryable, Selectable, Serialize)]
#[diesel(primary_key(CategoryID))]
#[diesel(table_name = crate::schema::ExpenseCategory)]
#[diesel(check_for_backend(diesel::mysql::Mysql))]
pub struct ExpCat {
    pub CategoryID: u8,
    pub MonthlyBudget: BigDecimal,
}

// Account interface structs

#[derive(Debug, Queryable, Selectable, Serialize)]
#[diesel(primary_key(TransactionID))]
#[diesel(table_name = crate::schema::TransactionAccount)]
#[diesel(check_for_backend(diesel::mysql::Mysql))]
pub struct TransAcc {
    pub TransactionID: u32,
    pub AccountID: u8,
}

#[derive(Debug, Queryable, Selectable, Serialize)]
#[diesel(primary_key(AccountID))]
#[diesel(table_name = crate::schema::CreditAccount)]
#[diesel(check_for_backend(diesel::mysql::Mysql))]
pub struct CredAcc {
    pub AccountID: u8,
    pub CreditLimit: BigDecimal,
}

#[derive(Debug, Queryable, Selectable, Serialize)]
#[diesel(primary_key(AccountID, MinBalanceForRate))]
#[diesel(table_name = crate::schema::SavingsAccount)]
#[diesel(check_for_backend(diesel::mysql::Mysql))]
pub struct SavAcc {
    pub AccountID: u8,
    pub MinBalanceForRate: BigDecimal,
    pub InterestRate: BigDecimal,
}

#[derive(Debug, Queryable, Selectable, Serialize)]
#[diesel(primary_key(CategoryID))]
#[diesel(table_name = crate::schema::JobIncome)]
#[diesel(check_for_backend(diesel::mysql::Mysql))]
pub struct JobStructInc {
    pub CategoryID: u8,
    pub JobID: u8,
}

// Yaba select structs

	// Category

#[derive(Debug, Queryable, Selectable, Serialize)]
#[diesel(table_name = crate::schema::TransactionCategory)]
#[diesel(check_for_backend(diesel::mysql::Mysql))]
pub struct TransCat_CatList {
	pub CategoryName: String,
    pub CategoryType: CategoryTypeEnum,
}

#[derive(Debug, Queryable, Selectable, Serialize)]
#[diesel(table_name = crate::schema::IncomeCategory)]
#[diesel(check_for_backend(diesel::mysql::Mysql))]
pub struct IncCat_CatList {
	pub MonthlyExpected: BigDecimal,
}

#[derive(Debug, Queryable, Selectable, Serialize)]
#[diesel(primary_key(CategoryID))]
#[diesel(table_name = crate::schema::ExpenseCategory)]
#[diesel(check_for_backend(diesel::mysql::Mysql))]
pub struct ExpCat_CatList {
    pub MonthlyBudget: BigDecimal,
}

