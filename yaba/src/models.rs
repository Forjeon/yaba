// Generated by diesel_ext


#![allow(non_snake_case)]
#![allow(non_camel_case_types)]
#![allow(unused)]
#![allow(clippy::all)]


use crate::schema::*;

use diesel::prelude::*;
use diesel::sql_types::*;

use serde::{ Deserialize, Serialize };

use bigdecimal::BigDecimal;
use chrono::NaiveDate;


// Core structs

#[derive(Debug, Queryable, Selectable, Serialize)]
#[diesel(primary_key(TransactionID))]
#[diesel(table_name = crate::schema::Transaction)]
#[diesel(check_for_backend(diesel::mysql::Mysql))]
pub struct Trans {
    pub TransactionID: u32,
    pub TransactionDate: NaiveDate,
    pub Description: String,
    pub Amount: BigDecimal,
}

#[derive(Debug, Queryable, Selectable, Serialize)]
#[diesel(primary_key(CategoryID))]
#[diesel(table_name = crate::schema::TransactionCategory)]
#[diesel(check_for_backend(diesel::mysql::Mysql))]
pub struct TransCat {
    pub CategoryID: u8,
    pub CategoryName: String,
    pub CategoryType: CategoryTypeEnum,
}

#[derive(Debug, Queryable, Selectable, Serialize)]
#[diesel(primary_key(AccountID))]
#[diesel(table_name = crate::schema::PaymentAccount)]
#[diesel(check_for_backend(diesel::mysql::Mysql))]
pub struct PayAcc {
    pub AccountID: u8,
    pub AccountName: String,
    pub AccountType: AccountTypeEnum,
}

// Category interface structs

#[derive(Debug, Insertable, Queryable, Selectable, Serialize)]
#[diesel(primary_key(TransactionID))]
#[diesel(table_name = crate::schema::TransactionInstanceCategory)]
#[diesel(check_for_backend(diesel::mysql::Mysql))]
pub struct TransInstCat {
    pub TransactionID: u32,
    pub CategoryID: u8,
}

#[derive(Debug, Queryable, Selectable, Serialize)]
#[diesel(primary_key(CategoryID))]
#[diesel(table_name = crate::schema::IncomeCategory)]
#[diesel(check_for_backend(diesel::mysql::Mysql))]
pub struct IncCat {
    pub CategoryID: u8,
    pub MonthlyExpected: BigDecimal,
}

#[derive(Debug, Queryable, Selectable, Serialize)]
#[diesel(primary_key(CategoryID))]
#[diesel(table_name = crate::schema::ExpenseCategory)]
#[diesel(check_for_backend(diesel::mysql::Mysql))]
pub struct ExpCat {
    pub CategoryID: u8,
    pub MonthlyBudget: BigDecimal,
}

// Account interface structs

#[derive(Debug, Insertable, Queryable, Selectable, Serialize)]
#[diesel(primary_key(TransactionID))]
#[diesel(table_name = crate::schema::TransactionAccount)]
#[diesel(check_for_backend(diesel::mysql::Mysql))]
pub struct TransAcc {
    pub TransactionID: u32,
    pub AccountID: u8,
}

#[derive(Debug, Queryable, Selectable, Serialize)]
#[diesel(primary_key(AccountID))]
#[diesel(table_name = crate::schema::CreditAccount)]
#[diesel(check_for_backend(diesel::mysql::Mysql))]
pub struct CredAcc {
    pub AccountID: u8,
    pub CreditLimit: BigDecimal,
}

#[derive(Debug, Queryable, Selectable, Serialize)]
#[diesel(primary_key(AccountID, MinBalanceForRate))]
#[diesel(table_name = crate::schema::SavingsAccount)]
#[diesel(check_for_backend(diesel::mysql::Mysql))]
pub struct SavAcc {
    pub AccountID: u8,
    pub MinBalanceForRate: BigDecimal,
    pub InterestRate: BigDecimal,
}

#[derive(AsChangeset, Debug, Identifiable, Queryable, Selectable)]
#[diesel(primary_key(Name))]
#[diesel(table_name = crate::schema::Users)]
pub struct UsersStruct {
    pub Name: String,
    pub Passkey: String,
    pub BadAttempts: u8,
}


// Yaba transaction logging

#[derive(Debug, Deserialize, Serialize)]
pub struct Trans_NewData {
	pub date: NaiveDate,
	pub desc: String,
	pub cat: u8,
	pub acc: u8,
	pub amt: BigDecimal,
}

#[derive(Debug, Insertable)]
#[diesel(table_name = crate::schema::Transaction)]
#[diesel(check_for_backend(diesel::mysql::Mysql))]
pub struct Trans_Insert {
    pub TransactionDate: NaiveDate,
    pub Description: String,
    pub Amount: BigDecimal,
}

// Yaba select structs

	// Category
/*
#[derive(Debug, Queryable, Selectable, Serialize)]
#[diesel(table_name = crate::schema::TransactionCategory)]
#[diesel(check_for_backend(diesel::mysql::Mysql))]
pub struct TransCat_CatList {
	pub CategoryName: String,
    pub CategoryType: CategoryTypeEnum,
}

#[derive(Debug, Queryable, Selectable, Serialize)]
#[diesel(table_name = crate::schema::IncomeCategory)]
#[diesel(check_for_backend(diesel::mysql::Mysql))]
pub struct IncCat_CatList {
	pub MonthlyExpected: BigDecimal,
}

#[derive(Debug, Queryable, Selectable, Serialize)]
#[diesel(primary_key(CategoryID))]
#[diesel(table_name = crate::schema::ExpenseCategory)]
#[diesel(check_for_backend(diesel::mysql::Mysql))]
pub struct ExpCat_CatList {
    pub MonthlyBudget: BigDecimal,
}
*/

